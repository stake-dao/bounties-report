name: "[sdTokens] Universal Merkles"

on:
  workflow_dispatch:
    inputs:
      token:
        description: 'Which token merkle to generate'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - spectra
          - sdfxs
  repository_dispatch:
    types: [generate-spectra-merkle, generate-sdfxs-merkle, generate-all-sd-merkles]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      should-run-spectra: ${{ steps.check.outputs.spectra }}
      should-run-sdfxs: ${{ steps.check.outputs.sdfxs }}
    steps:
      - name: Check conditions
        id: check
        run: |
          if [[ "${{ github.event.inputs.token }}" == "all" ]] || \
             [[ "${{ github.event.inputs.token }}" == "spectra" ]] || \
             [[ "${{ github.event.action }}" == "generate-spectra-merkle" ]] || \
             [[ "${{ github.event.action }}" == "generate-all-sd-merkles" ]]; then
            echo "spectra=true" >> $GITHUB_OUTPUT
          else
            echo "spectra=false" >> $GITHUB_OUTPUT
          fi
          
          if [[ "${{ github.event.inputs.token }}" == "all" ]] || \
             [[ "${{ github.event.inputs.token }}" == "sdfxs" ]] || \
             [[ "${{ github.event.action }}" == "generate-sdfxs-merkle" ]] || \
             [[ "${{ github.event.action }}" == "generate-all-sd-merkles" ]]; then
            echo "sdfxs=true" >> $GITHUB_OUTPUT
          else
            echo "sdfxs=false" >> $GITHUB_OUTPUT
          fi

  generate-spectra-merkle:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-run-spectra == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.13"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.5.1"
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Run Spectra merkle generation
        run: make -f automation/spectra/run.mk run-all
        env:
          EXPLORER_KEY: ${{ secrets.ETHERSCAN_TOKEN }}
          WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY}}

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Add all changes and commit
          git add .
          git commit -m "chore: Update Spectra merkles" || echo "No changes to commit"
          
          # Fetch and rebase
          git pull --rebase origin main
          
          # Push changes
          git push origin main

      - name: Clean up
        if: always()
        run: make -f automation/spectra/run.mk clean

  generate-sdfxs-merkle:
    runs-on: ubuntu-latest
    needs: [setup, generate-spectra-merkle]
    if: |
      always() && 
      needs.setup.outputs.should-run-sdfxs == 'true' &&
      (needs.generate-spectra-merkle.result == 'success' || needs.generate-spectra-merkle.result == 'skipped')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.13"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.5.1"
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Run sdFXS merkle generation
        run: make -f automation/sdfxs/run.mk run-merkle
        env:
          EXPLORER_KEY: ${{ secrets.ETHERSCAN_TOKEN }}
          WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY}}

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Add all changes and commit
          git add .
          git commit -m "chore: Update sdFXS merkles" || echo "No changes to commit"
          
          # Fetch and rebase
          git pull --rebase origin main
          
          # Push changes
          git push origin main

      - name: Clean up
        if: always()
        run: make -f automation/sdfxs/run.mk clean