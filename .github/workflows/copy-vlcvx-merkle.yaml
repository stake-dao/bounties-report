name: "[vlCVX] Publish - Merkles"

on:
  workflow_dispatch:
    inputs:
      type:
        description: "Type of merkle to generate"
        required: true
        default: "non-delegators"
        type: choice
        options:
          - delegators
          - non-delegators
  repository_dispatch:
    types: [copy-vlcvx-merkle]

jobs:
  generate-merkles:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Pull latest changes after checkout
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git pull origin main --rebase

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.5.1"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3

      - name: Install node dependencies
        run: pnpm install

      - name: Copy vlCVX merkle
        run: |
          # Calculate current period
          WEEK=604800
          CURRENT_TIMESTAMP=$(date +%s)
          CURRENT_PERIOD=$(( CURRENT_TIMESTAMP / WEEK * WEEK ))

          # Copy merkle files from bounties-reports directory
          if [ "${{ github.event.inputs.type || github.event.client_payload.type }}" == "non-delegators" ]; then
            # Copy main merkle file
            cp "bounties-reports/${CURRENT_PERIOD}/vlCVX/vlcvx_merkle.json" "${GITHUB_WORKSPACE}/bounties-reports/latest/vlCVX/vlcvx_merkle.json"

            # Find and copy chain-specific merkle files
            for file in bounties-reports/${CURRENT_PERIOD}/vlCVX/vlcvx_merkle_*.json; do
              if [ -f "$file" ]; then
                # Extract chain ID from filename
                CHAIN_ID=$(echo "$file" | sed 's/.*_\([0-9]*\)\.json/\1/')
                # Copy to latest directory with appropriate name
                cp "$file" "${GITHUB_WORKSPACE}/bounties-reports/latest/vlCVX/vlcvx_merkle_${CHAIN_ID}.json"
              fi
            done
          elif [ "${{ github.event.inputs.type || github.event.client_payload.type }}" == "delegators" ]; then
            cp "bounties-reports/${CURRENT_PERIOD}/vlCVX/merkle_data_delegators.json" "${GITHUB_WORKSPACE}/bounties-reports/latest/vlCVX/vlcvx_merkle_delegators.json"
          fi

      - name: Compute delegation APR and copy to latest
        run: |
          if [ "${{ github.event.inputs.type || github.event.client_payload.type }}" == "delegators" ]; then
            # Run APR computation (saves to current week folder)
            pnpm tsx script/helpers/computevlCVXDelegatorsAPR.ts
            
            # Calculate current period
            WEEK=604800
            CURRENT_TIMESTAMP=$(date +%s)
            CURRENT_PERIOD=$(( CURRENT_TIMESTAMP / WEEK * WEEK ))
            
            # Copy APRs.json from current week to latest folder
            if [ -f "bounties-reports/${CURRENT_PERIOD}/vlCVX/APRs.json" ]; then
              cp "bounties-reports/${CURRENT_PERIOD}/vlCVX/APRs.json" "${GITHUB_WORKSPACE}/bounties-reports/latest/vlCVX/APRs.json"
            fi
          fi
        env:
          EXPLORER_KEY: ${{ secrets.ETHERSCAN_TOKEN}}
          WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY }}

      - uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "chore: Update vlCVX merkle to latest"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>

      - name: Send error notification to Telegram
        if: failure()
        uses: appleboy/telegram-action@v1.0.1
        with:
          to: -1002354704686
          token: ${{ secrets.TG_API_KEY_BOT_ERROR }}
          format: html
          message: |
            ‚ùå <b>Workflow failed</b>
            ‚Ä¢ <b>Workflow:</b> ${{ github.workflow }}
            ‚Ä¢ <b>Job:</b> copy-merkle
            ‚Ä¢ <b>Trigger:</b> ${{ github.event_name }}
            ‚Ä¢ <b>Status:</b> ${{ job.status }}
            üìã <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View workflow logs</a>
