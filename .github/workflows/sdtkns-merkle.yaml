name: "[sdTokens] Generate Universal Merkle Trees"

on:
  workflow_dispatch:
    inputs:
      token:
        description: "Which sdToken to process"
        required: true
        type: choice
        options:
          - sdFXS
          - sdSpectra
          - all
      timestamp:
        description: "Optional: specific timestamp to process (leave empty for current period)"
        required: false
  workflow_run:
    workflows: ["[Protocols] Weekly ETH report"]
    types:
      - completed
    branches: [main]
  workflow_call:
    inputs:
      token:
        type: string
        required: true
      timestamp:
        type: string
        required: false

jobs:
  generate-merkle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.5.1"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.3

      - name: Install dependencies
        run: pnpm install

      - name: Determine tokens to process
        id: tokens
        run: |
          TOKEN_INPUT="${{ github.event.inputs.token || inputs.token || 'all' }}"
          
          # If triggered by workflow_run, check which reports were generated
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            WEEK=604800
            CURRENT_TIMESTAMP=$(date +%s)
            CURRENT_PERIOD=$(( CURRENT_TIMESTAMP / WEEK * WEEK ))
            
            TOKENS=""
            
            # Check if sdFXS report exists
            if [ -f "bounties-reports/$CURRENT_PERIOD/sdFXS.csv" ]; then
              TOKENS="sdFXS"
            fi
            
            # Check if sdSpectra report exists
            if [ -f "bounties-reports/$CURRENT_PERIOD/spectra/sdSPECTRA.csv" ]; then
              if [ -n "$TOKENS" ]; then
                TOKENS="$TOKENS,sdSpectra"
              else
                TOKENS="sdSpectra"
              fi
            fi
            
            # If no reports found, exit
            if [ -z "$TOKENS" ]; then
              echo "No sdToken reports found for current period"
              echo "tokens=" >> $GITHUB_OUTPUT
              exit 0
            fi
            
            echo "tokens=$TOKENS" >> $GITHUB_OUTPUT
          elif [ "$TOKEN_INPUT" = "all" ]; then
            echo "tokens=sdFXS,sdSpectra" >> $GITHUB_OUTPUT
          else
            echo "tokens=$TOKEN_INPUT" >> $GITHUB_OUTPUT
          fi

      - name: Generate sdFXS Merkle
        if: contains(steps.tokens.outputs.tokens, 'sdFXS')
        run: |
          if [ -n "${{ github.event.inputs.timestamp || inputs.timestamp }}" ]; then
            pnpm tsx script/sdTkns/generateUniversalMerkle.ts --token sdFXS --timestamp ${{ github.event.inputs.timestamp || inputs.timestamp }}
          else
            pnpm tsx script/sdTkns/generateUniversalMerkle.ts --token sdFXS
          fi
        env:
          WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY }}

      - name: Generate sdSpectra Merkle
        if: contains(steps.tokens.outputs.tokens, 'sdSpectra')
        run: |
          if [ -n "${{ github.event.inputs.timestamp || inputs.timestamp }}" ]; then
            pnpm tsx script/sdTkns/generateUniversalMerkle.ts --token sdSpectra --timestamp ${{ github.event.inputs.timestamp || inputs.timestamp }}
          else
            pnpm tsx script/sdTkns/generateUniversalMerkle.ts --token sdSpectra
          fi
        env:
          WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY }}

      - name: Commit and push if changed
        if: steps.tokens.outputs.tokens != ''
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add bounties-reports/*/sdTkns/
          git commit -m "Generate sdTokens universal merkle trees" || exit 0
          git push