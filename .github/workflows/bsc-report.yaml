name: Generate Bi-Weekly and OTC BSC Reports

on:
  workflow_dispatch:
    inputs:
      actions:
        description: "Actions to perform"
        required: true
        type: choice
        options:
          - Generate BSC report
          - Generate OTCS report
        default: "BSC"

  schedule:
    - cron: "0 0 * * 0" # Runs every Sunday at 00:00 UTC

env:
  AUTOMATION_DEVOPS_DIR: target-devops
  WEB3_ALCHEMY_API_KEY: ${{ secrets.WEB3_ALCHEMY_API_KEY }}

jobs:
  check-week:
    runs-on: ubuntu-latest
    outputs:
      isOdd: ${{ steps.week-check.outputs.isOdd }}
    steps:
      - name: Check if week is odd or even
        id: week-check
        run: |
          echo "isOdd=$(if (( $(date +'%V') % 2 )); then echo 'true'; else echo 'false'; fi)" >> $GITHUB_OUTPUT
        shell: bash

  generate-bsc-report:
    runs-on: ubuntu-latest
    needs: check-week
    if: ${{ needs.check-week.outputs.isOdd == 'true' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Checkout script repository
        uses: actions/checkout@v4
        with:
          repository: stake-dao/automation-jobs
          path: ${{ env.AUTOMATION_DEVOPS_DIR }}
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Set actions
        id: set-actions
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "actions=Generate BSC reports" >> $GITHUB_OUTPUT
          else
            echo "actions=${{ github.event.inputs.actions }}" >> $GITHUB_OUTPUT
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.13"

      - name: Install dependencies
        run: pip install -r ${{ env.AUTOMATION_DEVOPS_DIR }}/requirements.txt
        shell: bash

      - name: Run BSC report script
        if: contains(steps.set-actions.outputs.actions, 'Generate BSC reports')
        run: |
          cd ${{ env.AUTOMATION_DEVOPS_DIR }}
          python script/bounties/bsc/report.py
        env:
          BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_TOKEN }}
          PYTHONPATH: script/

      - name: Run OTCS report script
        if: contains(steps.set-actions.outputs.actions, 'Generate OTCS reports')
        run: |
          cd ${{ env.AUTOMATION_DEVOPS_DIR }}
          python script/bounties/otc/report_bsc.py
        env:
          BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_TOKEN }}
          PYTHONPATH: script/

      - name: Update cake.csv with new reports
        run: |
          WEEK=604800
          CURRENT_TIMESTAMP=$(date +%s)
          WEEK_TIMESTAMP=$((CURRENT_TIMESTAMP / WEEK * WEEK))
          CAKE_CSV_PATH="bounties-reports/$WEEK_TIMESTAMP/cake.csv"

          # Ensure the directory exists
          mkdir -p "bounties-reports/$WEEK_TIMESTAMP"

          # If cake.csv doesn't exist, create it with the header
          if [ ! -f "$CAKE_CSV_PATH" ]; then
            echo "Protocol;Gauge Name;Gauge Address;Reward Token;Reward Address;Reward Amount;Reward sd Value;Share % per Protocol" > "$CAKE_CSV_PATH"
          fi

          # Append BSC report (skipping header)
          tail -n +2 "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_report.csv" >> "$CAKE_CSV_PATH"

          # Append OTC report if it exists (skipping header)
          if [ -f "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_otc_report.csv" ]; then
            tail -n +2 "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_otc_report.csv" >> "$CAKE_CSV_PATH"
          fi

          echo "Updated contents of cake.csv:"
          cat "$CAKE_CSV_PATH"

        shell: bash

      - name: Move and combine reports
        run: |
          WEEK=604800
            CURRENT_TIMESTAMP=$(date +%s)
            WEEK_TIMESTAMP=$((CURRENT_TIMESTAMP / WEEK * WEEK))
            mkdir -p "bounties-reports/$WEEK_TIMESTAMP"

            # Debug: List contents of AUTOMATION_DEVOPS_DIR
            echo "Contents of ${{ env.AUTOMATION_DEVOPS_DIR }}:"
            ls -l ${{ env.AUTOMATION_DEVOPS_DIR }}

            # Move and rename BSC report
            mv "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_report.csv" "bounties-reports/$WEEK_TIMESTAMP/cake.csv"

            # Debug: Show contents of cake.csv after moving BSC report
            echo "Contents of cake.csv after moving BSC report:"
            cat "bounties-reports/$WEEK_TIMESTAMP/cake.csv"

            # Append OTC report if it exists
            if [ -f "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_otc_report.csv" ]; then
              echo "OTC report found, appending..."
              # Skip the header line and append only the data lines
              tail -n +2 "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_otc_report.csv" >> "bounties-reports/$WEEK_TIMESTAMP/cake.csv"
            else
              echo "OTC report not found"
            fi

            # Debug: Show final contents of cake.csv
            echo "Final contents of cake.csv:"
            cat "bounties-reports/$WEEK_TIMESTAMP/cake.csv"

            # Clean up
            rm -rf ${{ env.AUTOMATION_DEVOPS_DIR }}
          shell: bash

      - name: Debug report contents
        run: |
          echo "Contents of bsc_report.csv:"
          cat "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_report.csv"

          echo "Contents of bsc_otc_report.csv:"
          if [ -f "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_otc_report.csv" ]; then
            cat "${{ env.AUTOMATION_DEVOPS_DIR }}/bsc_otc_report.csv"
          else
            echo "bsc_otc_report.csv not found"
          fi
        shell: bash
